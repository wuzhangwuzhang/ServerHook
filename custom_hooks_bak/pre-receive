#!/usr/bin/env bash
#pre-receive script
#set -x #for debugging

keyword_list=(
    '^fix'          #bug修复
	'^Fix'          #bug修复
    '^fixed'        #bug修复
    '^Fixed'        #bug修复
    '^task'         #完成任务
	'^Task'         #完成任务
    '^revert'       #提交回退
	'^Revert'       #提交回退
    '^merge'        #分支合并
    '^Merge'        #分支合并
    '^test'         #测试用例
    '^perf'         #性能    
    '^docs'         #文档
    '^chore'        #其它
    '^depc'         #依赖
    '^[ci skip]'    #自动化
)

# Concatenate keyword_list
separator="|"
formatStr=$( printf "${separator}%s" "${keyword_list[@]}" )
regex="$( printf "${separator}%s" "${keyword_list[@]}" )"
# remove leading separator
regex="${regex:${#separator}}"


flag=0
validate_ref()
{
    # --- Arguments
    oldrev=$(git rev-parse $1)
    newrev=$(git rev-parse $2)
    refname="$3"
	echo 'oldrev:'$oldrev
	echo 'newrev:'$newrev
	echo 'refname:'$refname
	
	IFS='/' read -ra arr <<< "$refname"
	#echo ${#arr[@]}
	if [ "${#arr[@]}" -ge 5 ]; then
	  	echo "开发分支提交，不检查单号&&分支"
		exit 0
	fi

    commitList=`git rev-list $oldrev..$newrev`
    split=($commitList)
	length=${#split[@]}
    if [ $length -gt 0 ];then
        for s in ${split[@]}
        do
            msg=`git cat-file commit $s | sed '1,/^$/d'`
            if [ ${#msg} -lt 5 ];then
                exit 1
            else
				echo $msg
                IFS=' ' read -r keyword jiraId desc review<<<"$msg"                
              
				match=`echo $keyword | grep -nE "(${regex})"`
                #echo 'match info:'$match
                if [[ "${match}" == "" ]]; then
					echo '**************************************************'
                    echo '*     提交日志格式有误,拒绝提交,任务&缺陷提交示例如下		'
					echo '* task SLPK-6666 这是一个任务的提交描述 Review:宣宣   '
					echo '* fix SLPK-8888 这是一个bug修复的描述 Review:宣宣  '
					echo '**************************************************'
                    exit 1
                fi

                if [[ ${match} == *"Merge"* ]] || [[ ${match} == *"merge"* ]]; then
                    # 使用正则表达式匹配提取信息
                    regex=".*(SLPK-[0-9]{5,6}).*"
                    if [[ $msg =~ $regex ]]; then
                        jiraId=${BASH_REMATCH[1]}
                        #echo "本次Merge的单号: $jiraId"
                    else
                        echo "Merge记录里没有找到jira单号,提交日志不合法,拒绝提交!"
						# 定义待匹配的字符串
                        string="Merge branch 'master' of http://192.168.255.129/slpk_client/testproject"

                        # 使用正则表达式匹配提取信息
                        regex="Merge branch '(.*)' of (.*)"
                        if [[ $string =~ $regex ]]; then
                            branch=${BASH_REMATCH[1]}
                            repository=${BASH_REMATCH[2]}
                            echo "Branch: $branch"
                            echo "Repository: $repository"
                        else
                            echo "No match."
                        fi
                        exit 1
                    fi
                fi
               

                if [[ $msg == *"admin"* ]] || [[ $msg == *"Admin"* ]]; then
					echo "管理员特批提交"
                    flag=0
                    continue
                fi
                
				
				#echo '【提交日志】'$keyword $jiraId $desc $review
                python "hooks/jiraCheck.py" $keyword $jiraId $desc $refname
                flag=$?
                if (( $flag != 0 )); then
                    exit 1
                fi            
            fi
        done
    fi
}


read oldrev newrev refname
validate_ref $oldrev $newrev $refname

if [ ${flag} -eq 1 ];then
  	exit 1
else
	exit 0
fi

